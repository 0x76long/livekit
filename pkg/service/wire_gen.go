// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package service

import (
	"github.com/livekit/livekit-server/pkg/auth"
	"github.com/livekit/livekit-server/pkg/config"
	"github.com/livekit/livekit-server/pkg/routing"
	"github.com/livekit/livekit-server/pkg/rtc"
)

// Injectors from wire.go:

func InitializeServer(conf *config.Config, keyProvider auth.KeyProvider, roomStore RoomStore, router routing.Router, currentNode routing.LocalNode) (*LivekitServer, error) {
	roomService, err := NewRoomService(roomStore)
	if err != nil {
		return nil, err
	}
	rtcService := NewRTCService(conf, roomStore, router, currentNode)
	rtcConfig := rtc.RTCConfigFromConfig(conf)
	externalIP := externalIpFromNode(currentNode)
	webRTCConfig, err := rtc.NewWebRTCConfig(rtcConfig, externalIP)
	if err != nil {
		return nil, err
	}
	rtcRunner := NewRTCRunner(roomStore, router, currentNode, webRTCConfig)
	livekitServer, err := NewLivekitServer(conf, roomService, rtcService, keyProvider, router, rtcRunner, currentNode)
	if err != nil {
		return nil, err
	}
	return livekitServer, nil
}
